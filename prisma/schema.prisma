// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 
}

model User {
  user_id   String   @id @default(uuid()) // menggunakan uuid() untuk menghasilkan UUID secara otomatis
  username  String?
  email     String
  password  String
  role      String
  cart      Cart[]
  orders    Order[]
  reviews   Review[]

  @@map("users")
}

model Product {
  product_id  Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  category_id Int
  category    Category @relation(fields: [category_id], references: [category_id])
  orders      Order[]
  reviews     Review[]
  cart        Cart[]

  @@map("products")
}

model Order {
  order_id   Int     @id @default(autoincrement())
  user_id    String  // menggunakan tipe data String untuk UUID
  product_id Int
  quantity   Int
  status     String
  user       User    @relation(fields: [user_id], references: [user_id])
  product    Product @relation(fields: [product_id], references: [product_id])
  payment    Payment[]

  @@map("orders")
}

model Payment {
  payment_id    Int     @id @default(autoincrement())
  order_id      Int
  amount        Float
  payment_method String
  order         Order   @relation(fields: [order_id], references: [order_id])

  @@map("payments")
}

model Category {
  category_id Int      @id @default(autoincrement())
  name        String
  products    Product[]

  @@map("categories")
}

model Review {
  review_id Int     @id @default(autoincrement())
  user_id   String  // menggunakan tipe data String untuk UUID
  product_id Int
  rating    Int
  comment   String
  user      User    @relation(fields: [user_id], references: [user_id])
  product   Product @relation(fields: [product_id], references: [product_id])

  @@map("reviews")
}

model Cart {
  cart_id    Int     @id @default(autoincrement())
  user_id    String  // menggunakan tipe data String untuk UUID
  product_id Int
  quantity   Int
  user       User    @relation(fields: [user_id], references: [user_id])
  product    Product @relation(fields: [product_id], references: [product_id])

  @@map("carts")
}